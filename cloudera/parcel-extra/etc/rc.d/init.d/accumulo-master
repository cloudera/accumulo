#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Starts a Accumulo Master
#
# chkconfig: 345 85 15
# description: Accumulo Master
#
### BEGIN INIT INFO
# Provides:          accumulo-master
# Short-Description: Accumulo Master
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Required-Start:    $syslog $remote_fs
# Required-Stop:     $syslog $remote_fs
# Should-Start:
# Should-Stop:
### END INIT INFO

. /lib/lsb/init-functions
BIGTOP_DEFAULTS_DIR=${BIGTOP_DEFAULTS_DIR-/etc/default}
[ -n "${BIGTOP_DEFAULTS_DIR}" -a -r ${BIGTOP_DEFAULTS_DIR}/hadoop ] && . ${BIGTOP_DEFAULTS_DIR}/hadoop
[ -n "${BIGTOP_DEFAULTS_DIR}" -a -r ${BIGTOP_DEFAULTS_DIR}/accumulo ] && . ${BIGTOP_DEFAULTS_DIR}/accumulo

# Autodetect JAVA_HOME if not defined
. /usr/lib/bigtop-utils/bigtop-detect-javahome

RETVAL_SUCCESS=0

STATUS_RUNNING=0
STATUS_DEAD=1
STATUS_DEAD_AND_LOCK=2
STATUS_NOT_RUNNING=3
STATUS_OTHER_ERROR=102


ERROR_PROGRAM_NOT_INSTALLED=5
ERROR_PROGRAM_NOT_CONFIGURED=6


RETVAL=0
SLEEP_TIME=5
PROC_NAME="java"

DAEMON="accumulo-master"
DESC="Accumulo Master"
EXEC_PATH="/usr/bin/accumulo"
EXEC_DIR=""
SVC_USER="accumulo"
DAEMON_FLAGS="master"
CONF_DIR="/etc/accumulo/conf"
PIDFILE="/var/run/accumulo/accumulo-master.pid"
LOCKDIR="/var/lock/subsys"
LOCKFILE="$LOCKDIR/accumulo-master"
WORKING_DIR="/var/run/accumulo"

install -d -m 0755 -o accumulo -g accumulo /var/run/accumulo 1>/dev/null 2>&1 || :
[ -d "$LOCKDIR" ] || install -d -m 0755 $LOCKDIR 1>/dev/null 2>&1 || :

LOGFILE="/var/log/accumulo/${DAEMON}.out"

init_function() {
  [ -x $EXEC_PATH ] || exit $ERROR_PROGRAM_NOT_INSTALLED
  [ -d $CONF_DIR ] || exit $ERROR_PROGRAM_NOT_CONFIGURED

  echo "NOTE: it is strongly recommended that you override the following defaults in /etc/accumulo/conf/accumulo-site.xml:"
  echo "    Set logger.dir.walog to a directory on a partition with sufficient space for write-ahead logs"
  echo "    Set tracer.user and tracer.password to values of your choosing"

  log_success_msg "Initializing Accumulo: "

  su -s /bin/bash -c "cd ~/ && ${EXEC_PATH} init" $SVC_USER

  su -s /bin/bash hdfs -c '/usr/bin/hadoop fs -chmod 750 /accumulo/*'
  su -s /bin/bash hdfs -c '/usr/bin/hadoop fs -chmod 755 /accumulo/instance_id'
}
start() {
  [ -x $EXEC_PATH ] || exit $ERROR_PROGRAM_NOT_INSTALLED
  [ -d $CONF_DIR ] || exit $ERROR_PROGRAM_NOT_CONFIGURED
  log_success_msg "Starting ${DESC}: "

  checkstatusofproc
  status=$?
  if [ "$status" -eq "$STATUS_RUNNING" ]; then
    log_success_msg "${DESC} is running"
    exit 0
  fi

  cd ${WORKING_DIR}
  su -s /bin/bash $SVC_USER -c "${EXEC_PATH} $DAEMON_FLAGS > ${LOGFILE} 2>&1 &"'echo $! '"> ${PIDFILE}"

  [ $RETVAL -eq $RETVAL_SUCCESS ] && touch $LOCKFILE
  return $RETVAL
}
stop() {
  log_success_msg "Stopping ${DESC}: "
  checkstatusofproc
  if [ "$?" = "$STATUS_RUNNING" ] ; then
    kill -9 `cat ${PIDFILE}`
    RETVAL=$?
  else
    RETVAL=$RETVAL_SUCCESS
  fi

  [ $RETVAL -eq $RETVAL_SUCCESS ] && rm -f $LOCKFILE $PIDFILE
}
restart() {
  stop
  start
}

checkstatusofproc(){
  pidofproc -p $PIDFILE $PROC_NAME > /dev/null
}

checkstatus(){
  checkstatusofproc
  status=$?

  case "$status" in
    $STATUS_RUNNING)
      log_success_msg "${DESC} is running"
      ;;
    $STATUS_DEAD)
      log_failure_msg "${DESC} is dead and pid file exists"
      ;;
    $STATUS_DEAD_AND_LOCK)
      log_failure_msg "${DESC} is dead and lock file exists"
      ;;
    $STATUS_NOT_RUNNING)
      log_failure_msg "${DESC} is not running"
      ;;
    *)
      log_failure_msg "${DESC} status is unknown"
      ;;
  esac
  return $status
}

condrestart(){
  [ -e $LOCKFILE ] && restart || :
}

check_for_root() {
  if [ $(id -ur) -ne 0 ]; then
    echo 'Error: root user required'
    echo
    exit 1
  fi
}

service() {
  case "$1" in
    start)
      check_for_root
      start
      ;;
    stop)
      check_for_root
      stop
      ;;
    status)
      checkstatus
      RETVAL=$?
      ;;
    restart)
      check_for_root
      restart
      ;;
    condrestart|try-restart)
      check_for_root
      condrestart
      ;;
    init)
      check_for_root
      init_function
      ;;
    *)
      echo $"Usage: $0 {start|stop|status|restart|try-restart|condrestart}"
      exit 1
  esac
}

service "$@"

exit $RETVAL
